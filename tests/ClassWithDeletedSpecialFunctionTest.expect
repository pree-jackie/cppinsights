template<typename T>
class Foo {
public:
    Foo() = delete;
    Foo(int){}
};
/* First instantiated from: ClassWithDeletedSpecialFunctionTest.cpp:10 */
#ifdef INSIGHTS_USE_TEMPLATE
class Foo<int>
{
  
  public: 
  inline Foo() = delete;
  inline Foo(int)
  {
  }
  
  inline constexpr Foo(const Foo<int> &) = default;
  inline constexpr Foo(Foo<int> &&) = default;
  
};

#endif


int main()
{
  Foo<int> f = Foo<int>{2};
}

