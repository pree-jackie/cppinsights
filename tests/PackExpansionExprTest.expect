void f(int, int, int)
{
}


template<typename F, typename ...Types>
void forward(F f, Types &&...args) {
  f(static_cast<Types&&>(args)...);
}

/* First instantiated from: PackExpansionExprTest.cpp:12 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void forward<void (*)(int, int, int), int, int, int>(void (*)(int, int, int) f, int && args, int && args, int && args)
{
  f(static_cast<int &&>(args), static_cast<int &&>(args), static_cast<int &&>(args));
}
#endif



int main()
{
  forward(f, 1, 2, 3);
}


